{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"+08IACaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCD,EAAQE,OAE9C,OAED,mBAAGD,UAAU,qBAAqBE,KAAI,iBAAYH,EAAQI,OAA1D,SACGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SACGD,EAAQK,WCXFC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,oBAAIN,UAAU,cAAd,SACGM,EAASC,KAAI,SAAAR,GAAO,OACnB,6BACE,cAAC,EAAD,CAAaA,QAASA,KADfA,EAAQS,WCHVC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGV,UAAU,WAAWE,KAAI,iBAAYQ,EAAKP,OAA7C,SACGO,EAAKT,SCDGU,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKZ,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCY,EAAKC,QAEtC,8BACG,aAED,cAAC,EAAD,CAAUH,KAAME,EAAKF,aAIzB,mBAAGV,UAAU,iBAAb,SAA+BY,EAAKR,OAEpC,uBACCQ,EAAKN,SAASQ,OAAS,EACtB,cAAC,EAAD,CAAaR,SAAUM,EAAKN,WAE5B,mBAAG,UAAQ,oBAAX,iCCnBOS,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,oBAAIhB,UAAU,WAAd,SACGgB,EAAMT,KAAI,SAAAK,GAAI,OACb,6BACE,cAAC,EAAD,CAAUA,KAAMA,KADTA,EAAKJ,W,qBCUb,IAAMQ,EAAQC,EAAgBV,KAAI,SAAAK,GAAI,kCACxCA,GADwC,IAE3CF,MAXmBQ,EAWDN,EAAKM,OAVhBC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,MAC3C,MAULZ,UAPuBe,EAOGT,EAAKJ,GANxBc,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQsB,SAAWA,QADjE,IAAyBA,EALJH,KAeRM,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,mCAEA,cAAC,EAAD,CAAUgB,MAAOA,QCtBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7cb48fac.chunk.js","sourcesContent":["\nexport const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{comment.name}</strong>\n\n      {' by '}\n\n      <a className=\"CommentInfo__email\" href={`mailto:${comment.email}`}>\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {comment.body}\n    </div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo/CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <ul className=\"CommentList\">\n    {comments.map(comment => (\n      <li key={comment.id}>\n        <CommentInfo comment={comment} />\n      </li>\n    ))}\n  </ul>\n);\n","\nimport './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList/CommentList';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{post.title}</h3>\n\n      <p>\n        {'Posted by '}\n\n        <UserInfo user={post.user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">{post.body}</p>\n\n    <hr />\n    {post.comments.length > 0 ? (\n      <CommentList comments={post.comments} />\n    ) : (\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    )}\n  </div>\n);\n","import { PostInfo } from '../PostInfo/PostInfo';\nimport './PostList.scss';\n\nexport const PostList = ({ posts }) => (\n  <ul className=\"PostList\">\n    {posts.map(post => (\n      <li key={post.id}>\n        <PostInfo post={post} />\n      </li>\n    ))}\n  </ul>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nfunction getCommentsById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Statics list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}